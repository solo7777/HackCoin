const hre = require("hardhat");

async function main() {
  // –û—Ç—Ä–∏–º—É—î–º–æ –æ–±'—î–∫—Ç Signer (–≥–∞–º–∞–Ω–µ—Ü—å, –∑ —è–∫–æ–≥–æ –≤–∏–∫–ª–∏–∫–∞—î–º–æ burn)
  const [deployer] = await hre.ethers.getSigners();

  // –ê–¥—Ä–µ—Å–∞ –≤–∂–µ –∑–∞–¥–µ–ø–ª–æ—î–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É HackCoin —É Sepolia
  const contractAddress = "0x1Fa5036a3df254Ead1A5930BD208Ac760b1C2010";

  // –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—å –¥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É
  const HackCoin = await hre.ethers.getContractFactory("HackCoin");
  const hackCoin = await HackCoin.attach(contractAddress);

  // –°–∫—ñ–ª—å–∫–∏ —Ö–æ—á–µ—à —Å–ø–∞–ª–∏—Ç–∏ (–≤ —Ü—ñ–ª–∏—Ö HKC)
  const amountToBurn = "100";

  // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –≤ wei
  const amount = hre.ethers.parseUnits(amountToBurn, 18);

  // –í–∏–∫–ª–∏–∫–∞—î–º–æ burn
  const tx = await hackCoin.burn(amount);
  await tx.wait();

  console.log(`üî• –°–ø–∞–ª–µ–Ω–æ ${amountToBurn} HKC –∑ –∞–¥—Ä–µ—Å–∏ ${deployer.address}`);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞:", error);
    process.exit(1);
  });
